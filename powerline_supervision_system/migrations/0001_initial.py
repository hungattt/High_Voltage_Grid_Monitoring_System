# Generated by Django 3.1.3 on 2024-08-09 03:32

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ENV_Save',
            fields=[
                ('env_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('env_name', models.CharField(default='', max_length=255)),
                ('env_text', models.CharField(default='', max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Powerline',
            fields=[
                ('powerline_id', models.CharField(default='', max_length=125, primary_key=True, serialize=False)),
                ('powerline_name', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Powerline_location',
            fields=[
                ('location_id', models.CharField(default='', max_length=255, primary_key=True, serialize=False)),
                ('location_name', models.CharField(blank=True, default='', max_length=125, null=True)),
                ('coordinates', models.CharField(blank=True, default='', max_length=125, null=True)),
                ('prev_location_id', models.CharField(blank=True, default='', max_length=225, null=True)),
                ('prev_coordinates', models.CharField(blank=True, default='', max_length=125, null=True)),
                ('powerline_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='powerline_supervision_system.powerline')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('problem_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('problem_name', models.CharField(default='', max_length=255)),
                ('problem_label', models.CharField(default='', max_length=255)),
                ('problem_title', models.CharField(default='', max_length=500)),
                ('name_e', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket_Heading',
            fields=[
                ('heading_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('heading_name', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket_Content',
            fields=[
                ('content_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('content_name', models.CharField(default='', max_length=255)),
                ('content_label', models.CharField(default='', max_length=255)),
                ('content_title', models.CharField(default='', max_length=500)),
                ('heading_id', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='powerline_supervision_system.ticket_heading')),
            ],
        ),
        migrations.CreateModel(
            name='Supervision_schedule',
            fields=[
                ('schedule_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('location_start', models.CharField(blank=True, default='', max_length=125, null=True)),
                ('location_end', models.CharField(blank=True, default='', max_length=125, null=True)),
                ('schedule_name', models.CharField(blank=True, default='', max_length=125, null=True)),
                ('implementation_date', models.DateField()),
                ('supervision_results', models.CharField(blank=True, default='', max_length=1025, null=True)),
                ('powerline_id', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='powerline_supervision_system.powerline')),
            ],
        ),
        migrations.CreateModel(
            name='Supervision_image',
            fields=[
                ('image_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('image_name', models.CharField(default='', max_length=500)),
                ('image_label', models.CharField(default='', max_length=250)),
                ('image_title', models.CharField(default='', max_length=500)),
                ('image_path', models.CharField(default='', max_length=1024)),
                ('image_gis', models.CharField(default='', max_length=250)),
                ('image_status', models.CharField(choices=[('normal', 'Normal'), ('defect', 'Defect')], default='normal', max_length=10, verbose_name='Image Status')),
                ('lens_type', models.CharField(choices=[('optical', 'Optical'), ('thermal', 'Thermal')], default='optical', max_length=10, verbose_name='Lens Type')),
                ('location_id', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='powerline_supervision_system.powerline_location')),
                ('schedule_id', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='powerline_supervision_system.supervision_schedule')),
            ],
        ),
        migrations.CreateModel(
            name='Defect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('defect_status', models.CharField(choices=[('not_update', 'Not Update'), ('update', 'Update')], default='not_update', max_length=10, verbose_name='Defect Status')),
                ('update_path', models.CharField(default='', max_length=1024)),
                ('supervision_image', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, to='powerline_supervision_system.supervision_image')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
